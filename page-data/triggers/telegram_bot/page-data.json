{"componentChunkName":"component---src-templates-docs-js","path":"/triggers/telegram_bot/","result":{"data":{"site":{"siteMetadata":{"title":"Actionsflow Documentation","docsLocation":"https://github.com/actionsflow/actionsflow/tree/master"}},"mdx":{"fields":{"id":"f23748d8-1f93-535f-b9bc-7076aaf3a617","title":"Telegram_bot","slug":"/triggers/telegram_bot/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"actionsflowtrigger-telegram_bot\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#actionsflowtrigger-telegram_bot\",\n    \"aria-label\": \"actionsflowtrigger telegram_bot permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"@actionsflow/trigger-telegram_bot\")), mdx(\"p\", null, \"This is an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/actionsflow/actionsflow\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Actionsflow\"), \" telegram bot trigger. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"telegram_bot\"), \" trigger is triggered when new messages of telegram bot are detected. This trigger supports to specify one message type or multiple message types\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This is an official trigger, you don't need to install it manually.\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/actionsflow/actionsflow/tree/master/packages/actionsflow-trigger-telegram_bot\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"View trigger on Github\")), mdx(\"h1\", {\n    \"id\": \"events\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#events\",\n    \"aria-label\": \"events permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Events\"), mdx(\"h2\", {\n    \"id\": \"new-message-in-telegram-bot\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#new-message-in-telegram-bot\",\n    \"aria-label\": \"new message in telegram bot permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"New message in telegram bot\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"# single message type\\non:\\n  telegram_bot:\\n    event: text\\n    token: ${{ secrets.TELEGRAM_BOT_TOKEN }}\\n\\n# multiple message types\\non:\\n  telegram_bot:\\n    event:\\n      - photo\\n      - text\\n    token: ${{ secrets.TELEGRAM_BOT_TOKEN }}\\n\")), mdx(\"h3\", {\n    \"id\": \"params\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#params\",\n    \"aria-label\": \"params permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Params\"), mdx(\"p\", null, \"This trigger accepts \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://actionsflow.github.io/docs/triggers/#general-params-for-triggers\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"all trigger's general params\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \", required, telegram bot token, you should get it from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://telegram.me/BotFather\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Telegram BotFather\"), \", for example: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webhook\"), \", optional, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"boolean\"), \", if use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://core.telegram.org/bots/api#setwebhook\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"telegram webhook mode\"), \" to get telegram message updates, the default value is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \", the trigger will poll to get telegram updates. , if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \", you must set webhook through telegram's \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://core.telegram.org/bots/api#setwebhook\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"setWebhook\"), \" API\"), \", the webhook URL should be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://webhook.actionsflow.workers.dev/<owner>/<repo>/<workflow-file-name>/telegram_bot?__token=<your-github-personal-token>\"), \", learn more about webhook URL, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://actionsflow.github.io/docs/reference/5-webhook/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"here\"), \", here is a CURL example to set webhook:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"curl --request POST 'https://api.telegram.org/bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11/setWebhook' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"url\\\": \\\"https://webhook.actionsflow.workers.dev/<owner>/<repo>/<workflow-file-name>/telegram_bot?__token=<your-github-personal-token>\\\"\\n}'\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"event\"), \", optional, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"string\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"string[]\"), \", telegram message type, allowed types:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"text\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"animation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"audio\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"channel_chat_created\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"contact\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"delete_chat_photo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dice\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"document\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"game\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"group_chat_created\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"invoice\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"left_chat_member\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"location\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"migrate_from_chat_id\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"migrate_to_chat_id\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"new_chat_members\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"new_chat_photo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"new_chat_title\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"passport_data\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"photo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pinned_message\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"poll\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sticker\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"successful_payment\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"supergroup_chat_created\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"video\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"video_note\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"voice\"))), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"event\"), \" is not provided, all message will be triggered. example: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[\\\"text\\\",\\\"photo\\\"]\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"requestParams\"), \", optional, we use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/axios/axios\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Axios\"), \" for polling data, so your can pass all params that \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/axios/axios#request-config\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"axios supported\"), \". For example:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"on:\\n  telegram_bot:\\n    url: https://jsonplaceholder.typicode.com/posts\\n\")))), mdx(\"h2\", {\n    \"id\": \"outputs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#outputs\",\n    \"aria-label\": \"outputs permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Outputs\"), mdx(\"p\", null, \"This trigger's outputs will be the item of the telegram message, you can see it \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://core.telegram.org/bots/api#message\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"here\")), mdx(\"p\", null, \"An outputs example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"message_id\\\": 7,\\n  \\\"from\\\": {\\n    \\\"id\\\": 1056059698,\\n    \\\"is_bot\\\": false,\\n    \\\"first_name\\\": \\\"Owen\\\",\\n    \\\"last_name\\\": \\\"Young\\\",\\n    \\\"language_code\\\": \\\"en\\\"\\n  },\\n  \\\"chat\\\": {\\n    \\\"id\\\": 1056059698,\\n    \\\"first_name\\\": \\\"Owen\\\",\\n    \\\"last_name\\\": \\\"Young\\\",\\n    \\\"type\\\": \\\"private\\\"\\n  },\\n  \\\"date\\\": 1598383043,\\n  \\\"text\\\": \\\"test\\\",\\n  \\\"update_id\\\": 791185172\\n}\\n\")), mdx(\"p\", null, \"You can use the outputs like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"on:\\n  telegram_bot:\\n    token: ${{ secrets.TELEGRAM_BOT_TOKEN }}\\njobs:\\n  print:\\n    name: Print\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Print Outputs\\n        env:\\n          telegram_text: ${{ on.telegram_bot.outputs.text }}\\n        run: |\\n          echo telegram text: $telegram_text\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#actionsflowtrigger-telegram_bot","title":"@actionsflow/trigger-telegram_bot"},{"url":"#events","title":"Events","items":[{"url":"#new-message-in-telegram-bot","title":"New message in telegram bot","items":[{"url":"#params","title":"Params"}]},{"url":"#outputs","title":"Outputs"}]}]},"parent":{"__typename":"File","relativePath":"packages/actionsflow-trigger-telegram_bot/README.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/about/","title":"About"}}},{"node":{"fields":{"slug":"/compare/","title":"Compare with Zapier and IFTTT"}}},{"node":{"fields":{"slug":"/concepts/","title":"Core concepts"}}},{"node":{"fields":{"slug":"/contributing/","title":"Contributing Guide"}}},{"node":{"fields":{"slug":"/creating-triggers/","title":"Creating Triggers"}}},{"node":{"fields":{"slug":"/faqs/","title":"FAQs"}}},{"node":{"fields":{"slug":"/getting-started/","title":"Getting Started"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference/","title":"Reference"}}},{"node":{"fields":{"slug":"/steps/","title":"Job Steps"}}},{"node":{"fields":{"slug":"/triggers/","title":"Triggers"}}},{"node":{"fields":{"slug":"/upgrade/","title":"Upgrade"}}},{"node":{"fields":{"slug":"/workflow/","title":"Workflow syntax for Actionsflow"}}},{"node":{"fields":{"slug":"/creating-triggers/creating-a-generic-trigger/","title":"Creating a Generic Trigger"}}},{"node":{"fields":{"slug":"/creating-triggers/creating-a-local-trigger/","title":"Creating a local trigger"}}},{"node":{"fields":{"slug":"/reference/1-action-api/","title":"Actionsflow action API"}}},{"node":{"fields":{"slug":"/reference/2-api/","title":"Actionsflow core API"}}},{"node":{"fields":{"slug":"/reference/3-cli/","title":"Actionsflow CLI API"}}},{"node":{"fields":{"slug":"/reference/4-trigger-helpers/","title":"Trigger helpers"}}},{"node":{"fields":{"slug":"/reference/5-webhook/","title":"Webhook Introduction"}}},{"node":{"fields":{"slug":"/triggers/0-rss/","title":"RSS"}}},{"node":{"fields":{"slug":"/triggers/1-poll/","title":"Poll"}}},{"node":{"fields":{"slug":"/triggers/2-webhook/","title":"Webhook"}}},{"node":{"fields":{"slug":"/triggers/3-script/","title":"Script"}}},{"node":{"fields":{"slug":"/triggers/telegram_bot/","title":"Telegram_bot"}}},{"node":{"fields":{"slug":"/triggers/twitter/","title":"Twitter"}}}]}},"pageContext":{"id":"f23748d8-1f93-535f-b9bc-7076aaf3a617"}},"staticQueryHashes":["2619113677","2619113677","3444015290","3444015290","3706406642","3706406642"]}
{"componentChunkName":"component---src-templates-docs-js","path":"/triggers/webhook/","result":{"data":{"site":{"siteMetadata":{"title":"Actionsflow Documentation","docsLocation":"https://github.com/actionsflow/actionsflow/tree/master/docs"}},"mdx":{"fields":{"id":"3809ac5e-0371-5b67-b3af-94534022b56f","title":"Webhook","slug":"/triggers/webhook/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Webhook\",\n  \"metaTitle\": \"This is the title tag of this page\",\n  \"metaDescription\": \"This is the meta description\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Webhook\"), mdx(\"h2\", null, \"Events\"), mdx(\"h3\", null, \"New Webhook Event\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"on:\\n  webhook:\\n    event: test\\njobs:\\n  ifttt:\\n    name: Make a Request to IFTTT\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actionsflow/ifttt-webhook-action@v1\\n        with:\\n          event: test\\n          key: ${{ secrets.IFTTT_KEY }}\\n          value1: ${{ on.webhook.outputs.event }}\\n          value2: ${{ toJson(on.webhook.outputs.payload) }}\\n          value3: ${{ toJson(on.webhook.outputs.body) }}\\n\")), mdx(\"h3\", null, \"Trigger webhook\"), mdx(\"p\", null, \"We use github \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"repository_dispatch\"), \" event as webhook event, So you need to make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://<github-user-name>:<github-personal-token>@api.github.com/repos/<github-user-name>/<github-repo-name>/dispatches\"), \", with headers \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Content-Type: application/json\"), \", with JSON body:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"event_type\\\": \\\"test\\\",\\n  \\\"client_payload\\\": {\\n    \\\"value1\\\": \\\"xxx\\\",\\n    \\\"key\\\": \\\"value\\\"\\n  }\\n}\\n\")), mdx(\"h3\", null, \"Curl example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"curl --location --request POST 'https://<github-user-name>:<github-personal-token>@api.github.com/repos/<github-user-name>/<github-repo-name>/dispatches' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n  \\\"event_type\\\": \\\"test\\\",\\n  \\\"client_payload\\\": {\\n    \\\"value1\\\": \\\"xxx\\\",\\n    \\\"key\\\": \\\"value\\\"\\n  }\\n}'\\n\")), mdx(\"h3\", null, \"Nodejs Axios example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"var axios = require(\\\"axios\\\");\\nvar data = JSON.stringify({\\n  event_type: \\\"test\\\",\\n  client_payload: { value1: \\\"xxx\\\", key: \\\"value\\\" },\\n});\\n\\nvar config = {\\n  method: \\\"post\\\",\\n  url:\\n    \\\"https://<github-user-name>:<github-personal-token>@api.github.com/repos/<github-user-name>/<github-repo-name>/dispatches\\\",\\n  headers: {\\n    \\\"Content-Type\\\": \\\"application/json\\\",\\n  },\\n  data: data,\\n};\\n\\naxios(config)\\n  .then(function (response) {\\n    console.log(JSON.stringify(response.data));\\n  })\\n  .catch(function (error) {\\n    console.log(error);\\n  });\\n\")), mdx(\"h3\", null, \"IFTTT Webhook Request example\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"!!Note, for some reason, IFTTT can not post github API directly, always response 403 status code, I don't know the reason yet, I suspect it's a github API problem, but I'm not sure. if you know why, please let me know!\")), mdx(\"p\", null, \"So, I create a webhook relay API for forward IFTTT request to other service. So you can use it like this:\"), mdx(\"p\", null, \"You can use IFTTT webhook as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"then\"), \" action to trigger the webhook, here is an example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"https://<github-user-name>:<github-personal-token>@eno9s1l2xztg49j.m.pipedream.net/https://api.github.com/repos/<github-user-name>/<github-repo-name>/dispatches\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Method: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content Type: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"application/json\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Body\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"event_type\\\": \\\"test\\\",\\n  \\\"client_payload\\\": {\\n    \\\"value1\\\": \\\"<<<{{Text}}>>>\\\",\\n    \\\"key\\\": \\\"<<<{{AuthorName}}>>>\\\"\\n  }\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Tips: if your field content need to be escaped, you should surround it with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<<<>>>\"))), mdx(\"h2\", null, \"Options\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Param\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Required\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Examples\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"event\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"string\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"false\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"test1,test2\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"will be triigerd when post body \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"event_type\"), \" === \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"event\"), \",if not providered, all events will trigger this workflow\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }))))), mdx(\"h2\", null, \"Outputs\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Field\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Examples\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"event\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"string\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"test\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"will be post body \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"event_type\"), \" value\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"payload\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"object\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{\\\"event_type\\\": \\\"test\\\",\\\"client_payload\\\": {\\\"value1\\\": \\\"xxx\\\",\\\"key\\\": \\\"value\\\"}}\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"will be post body \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"client_payload\"), \" value\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"body\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"object\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{\\\"event_type\\\":\\\"test\\\",\\\"client_payload\\\":{\\\"value1\\\":\\\"xxx\\\",\\\"key\\\":\\\"value\\\"}}\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"the body you posted\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }))))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#webhook","title":"Webhook","items":[{"url":"#events","title":"Events","items":[{"url":"#new-webhook-event","title":"New Webhook Event"},{"url":"#trigger-webhook","title":"Trigger webhook"},{"url":"#curl-example","title":"Curl example"},{"url":"#nodejs-axios-example","title":"Nodejs Axios example"},{"url":"#ifttt-webhook-request-example","title":"IFTTT Webhook Request example"}]},{"url":"#options","title":"Options"},{"url":"#outputs","title":"Outputs"}]}]},"parent":{"__typename":"File","relativePath":"triggers/webhook.md"},"frontmatter":{"metaTitle":"This is the title tag of this page","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/about/","title":"About"}}},{"node":{"fields":{"slug":"/actions/","title":"Actions"}}},{"node":{"fields":{"slug":"/compare/","title":"Compare with Zapier and IFTTT"}}},{"node":{"fields":{"slug":"/concepts/","title":"Core concepts"}}},{"node":{"fields":{"slug":"/contributing/","title":"Contributing"}}},{"node":{"fields":{"slug":"/faqs/","title":"FAQs"}}},{"node":{"fields":{"slug":"/getting-started/","title":"Getting Started"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference/","title":"Actionsflow workflow reference"}}},{"node":{"fields":{"slug":"/triggers/","title":"Triggers"}}},{"node":{"fields":{"slug":"/upgrade/","title":"Upgrade"}}},{"node":{"fields":{"slug":"/reference/1-context-and-expression-syntax/","title":"Context and expression syntax"}}},{"node":{"fields":{"slug":"/triggers/poll/","title":"Poll"}}},{"node":{"fields":{"slug":"/triggers/rss/","title":"RSS"}}},{"node":{"fields":{"slug":"/triggers/telegram-bot/","title":"Telegram Bot"}}},{"node":{"fields":{"slug":"/triggers/webhook/","title":"Webhook"}}}]}},"pageContext":{"id":"3809ac5e-0371-5b67-b3af-94534022b56f"}},"staticQueryHashes":["2619113677","2619113677","3444015290","3444015290","3706406642","3706406642"]}
{"componentChunkName":"component---src-templates-docs-js","path":"/triggers/telegram-bot/","result":{"data":{"site":{"siteMetadata":{"title":"Actionsflow Documentation","docsLocation":"https://github.com/actionsflow/actionsflow/tree/master/docs"}},"mdx":{"fields":{"id":"2dfd72cc-0c54-5062-b5ad-63eb9666f780","title":"Telegram Bot","slug":"/triggers/telegram-bot/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Telegram Bot\",\n  \"metaTitle\": \"This is the title tag of this page\",\n  \"metaDescription\": \"This is the meta description\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Poll\"), mdx(\"h2\", null, \"Events\"), mdx(\"h3\", null, \"New Message in telegram bot\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"on:\\n  telegram_bot:\\n    events:\\n      - photo\\n      - text\\n    token: ${{ secrets.TELEGRAM_BOT_TOKEN }}\\njobs:\\n  ifttt:\\n    name: Make a Request to IFTTT\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actionsflow/ifttt-webhook-action@v1\\n        with:\\n          event: test\\n          key: ${{ secrets.IFTTT_KEY }}\\n          value1: ${{ toJson(on.telegram_bot.outputs) }}\\n\")), mdx(\"h2\", null, \"Options\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Param\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Required\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Examples\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Description\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"token\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"string\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"true\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11,\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"telegram bot token\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"events\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"array\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"false\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"[\\\"text\\\",\\\"photo\\\"]\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"telegram message type,if not provided, all message will trigger an action, allowed types: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"text\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"animation\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"audio\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"channel_chat_created\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"contact\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"delete_chat_photo\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dice\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"document\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"game\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"group_chat_created\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"invoice\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left_chat_member\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"location\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"migrate_from_chat_id\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"migrate_to_chat_id\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"new_chat_members\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"new_chat_photo\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"new_chat_title\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"passport_data\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"photo\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"pinned_message\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"poll\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"sticker\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"successful_payment\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"supergroup_chat_created\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"video\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"video_note\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"voice\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"event\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"string\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"false\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"text\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"telegram message type,if not provided, all message will trigger an action, allowed types: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"text\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"animation\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"audio\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"channel_chat_created\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"contact\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"delete_chat_photo\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dice\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"document\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"game\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"group_chat_created\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"invoice\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"left_chat_member\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"location\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"migrate_from_chat_id\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"migrate_to_chat_id\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"new_chat_members\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"new_chat_photo\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"new_chat_title\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"passport_data\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"photo\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"pinned_message\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"poll\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"sticker\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"successful_payment\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"supergroup_chat_created\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"video\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"video_note\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"voice\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"every\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"number\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"false\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"rss fetch interval, unit: minutes\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"max_items_count\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"number\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"false\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"15\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The items max length, default is none, it will response all feed items\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"skip_first\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"boolean\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"false\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"true\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"If should skip first fetch items\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"false\")))), mdx(\"p\", null, \"And, We use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/axios/axios\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Axios\"), \" for poll data, so your can pass all params that axios supported.\"), mdx(\"h2\", null, \"Outputs\"), mdx(\"p\", null, \"The item of the telegram message, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://core.telegram.org/bots/api#message\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"here\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#poll","title":"Poll","items":[{"url":"#events","title":"Events","items":[{"url":"#new-message-in-telegram-bot","title":"New Message in telegram bot"}]},{"url":"#options","title":"Options"},{"url":"#outputs","title":"Outputs"}]}]},"parent":{"__typename":"File","relativePath":"triggers/telegram-bot.md"},"frontmatter":{"metaTitle":"This is the title tag of this page","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/about/","title":"About"}}},{"node":{"fields":{"slug":"/actions/","title":"Actions"}}},{"node":{"fields":{"slug":"/compare/","title":"Compare with Zapier and IFTTT"}}},{"node":{"fields":{"slug":"/concepts/","title":"Core concepts"}}},{"node":{"fields":{"slug":"/contributing/","title":"Contributing"}}},{"node":{"fields":{"slug":"/faqs/","title":"FAQs"}}},{"node":{"fields":{"slug":"/getting-started/","title":"Getting Started"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference/","title":"Actionsflow workflow reference"}}},{"node":{"fields":{"slug":"/triggers/","title":"Triggers"}}},{"node":{"fields":{"slug":"/upgrade/","title":"Upgrade"}}},{"node":{"fields":{"slug":"/reference/1-context-and-expression-syntax/","title":"Context and expression syntax"}}},{"node":{"fields":{"slug":"/triggers/poll/","title":"Poll"}}},{"node":{"fields":{"slug":"/triggers/rss/","title":"RSS"}}},{"node":{"fields":{"slug":"/triggers/telegram-bot/","title":"Telegram Bot"}}},{"node":{"fields":{"slug":"/triggers/webhook/","title":"Webhook"}}}]}},"pageContext":{"id":"2dfd72cc-0c54-5062-b5ad-63eb9666f780"}},"staticQueryHashes":["2619113677","2619113677","3444015290","3444015290","3706406642","3706406642"]}
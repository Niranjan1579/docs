{"componentChunkName":"component---src-templates-docs-js","path":"/creating-triggers/creating-a-generic-trigger/","result":{"data":{"site":{"siteMetadata":{"title":"Actionsflow Documentation","docsLocation":"https://github.com/actionsflow/actionsflow/tree/master"}},"mdx":{"fields":{"id":"e004d4b9-41cb-5f3d-838f-eb6fc966aa27","title":"Creating a Generic Trigger","slug":"/creating-triggers/creating-a-generic-trigger/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating a Generic Trigger\",\n  \"metaTitle\": \"Creating an Actionsflow Generic Trigger\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A trigger contain a file, usually in the project root, called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" - this file holds various metadata relevant to the project. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" file is also used to provide information to npm that identifies the project and allows npm to handle the project's dependencies.\"), mdx(\"p\", null, \"An Actionsflow trigger name looks like \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"@actionsflow/trigger-*\")), \", for example: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/actionsflow/actionsflow/tree/master/packages/actionsflow-trigger-twitter\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"@actionsflow/trigger-twitter\")), \", you should name your trigger with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"@actionsflow/trigger-[name]\")), \".\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"if your trigger name is more than one word, snake case format is recommended for a trigger name, because the jobs use trigger's outputs by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on.trigger_name.outputs.param\"), \", if your trigger is named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"trigger-name\"), \", then the jobs should use trigger's outputs by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on['trigger-name'].outputs.param\"), \". Snake case is also Github actions naming conventions, like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pull_request\"), \", it's also Actionsflow trigger recommended naming conventions.\")), mdx(\"h2\", {\n    \"id\": \"initializing-your-trigger-project\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#initializing-your-trigger-project\",\n    \"aria-label\": \"initializing your trigger project permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Initializing your trigger project\"), mdx(\"p\", null, \"To initialize a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" for your project, run the following command:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm init\\n\")), mdx(\"p\", null, \"Once you've run the command you'll see a series of options listed in the command-line interface (CLI). Those you select are stored in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#initializing-your-trigger-project","title":"Initializing your trigger project"}]},"parent":{"__typename":"File","relativePath":"docs/creating-triggers/creating-a-generic-trigger.md"},"frontmatter":{"metaTitle":"Creating an Actionsflow Generic Trigger","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/about/","title":"About"}}},{"node":{"fields":{"slug":"/compare/","title":"Compare with Zapier and IFTTT"}}},{"node":{"fields":{"slug":"/concepts/","title":"Core concepts"}}},{"node":{"fields":{"slug":"/contributing/","title":"Contributing Guide"}}},{"node":{"fields":{"slug":"/creating-triggers/","title":"Creating Triggers"}}},{"node":{"fields":{"slug":"/faqs/","title":"FAQs"}}},{"node":{"fields":{"slug":"/getting-started/","title":"Getting Started"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference/","title":"Reference"}}},{"node":{"fields":{"slug":"/steps/","title":"Job Steps"}}},{"node":{"fields":{"slug":"/triggers/","title":"Triggers"}}},{"node":{"fields":{"slug":"/upgrade/","title":"Upgrade"}}},{"node":{"fields":{"slug":"/workflow/","title":"Workflow syntax for Actionsflow"}}},{"node":{"fields":{"slug":"/creating-triggers/creating-a-generic-trigger/","title":"Creating a Generic Trigger"}}},{"node":{"fields":{"slug":"/creating-triggers/creating-a-local-trigger/","title":"Creating a local trigger"}}},{"node":{"fields":{"slug":"/reference/1-action-api/","title":"Actionsflow action API"}}},{"node":{"fields":{"slug":"/reference/2-api/","title":"Actionsflow core API"}}},{"node":{"fields":{"slug":"/reference/3-cli/","title":"Actionsflow CLI API"}}},{"node":{"fields":{"slug":"/reference/4-trigger-helpers/","title":"Trigger helpers"}}},{"node":{"fields":{"slug":"/reference/5-webhook/","title":"Webhook Introduction"}}},{"node":{"fields":{"slug":"/triggers/0-rss/","title":"RSS"}}},{"node":{"fields":{"slug":"/triggers/1-poll/","title":"Poll"}}},{"node":{"fields":{"slug":"/triggers/2-webhook/","title":"Webhook"}}},{"node":{"fields":{"slug":"/triggers/3-script/","title":"Script"}}},{"node":{"fields":{"slug":"/triggers/telegram_bot/","title":"Telegram_bot"}}},{"node":{"fields":{"slug":"/triggers/twitter/","title":"Twitter"}}}]}},"pageContext":{"id":"e004d4b9-41cb-5f3d-838f-eb6fc966aa27"}},"staticQueryHashes":["2619113677","2619113677","3444015290","3444015290","3706406642","3706406642"]}